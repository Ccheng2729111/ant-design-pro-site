{"data":{"markdownRemark":{"html":"<p>We always use tslint in TypeScript to guarantee the quality of our code. But tslint is a subset of eslint. Tslint offers about 151 basic rules, but eslint has 249, not to mention the well-developed ecology of eslint, which provides more specification code. The tslint team also found this problem and decided to <a href=\"https://eslint.org/blog/2019/01/future-typescript-eslint\">transfer</a> into eslint.</p>\n<h2 id=\"起因\">起因<a href=\"#%E8%B5%B7%E5%9B%A0\" aria-hidden class=\"anchor\">#</a></h2>\n<p>In the preparation of Pro v4, we added a feature that converts typescript into javascript. After the conversion is complete, we ran eslint and prettier to make the code more human-like. The js code after the conversion is complete cannot pass the eslint check:</p>\n<p>For example here:</p>\n<p><img src=\"https://intranetproxy.alipay.com/skylark/lark/0/2019/png/93819/1561039456413-1a389431-a7ff-4b00-b872-8f34249bab35.png#align=left&#x26;display=inline&#x26;height=159&#x26;name=image.png&#x26;originHeight=318&#x26;originWidth=2848&#x26;size=96918&#x26;status=done&#x26;width=1424\" alt=\"image.png\"></p>\n<p>Also here：</p>\n<p><img src=\"https://intranetproxy.alipay.com/skylark/lark/0/2019/png/93819/1561039496763-22b0d0d8-172b-4b74-b50d-908a47024d22.png#align=left&#x26;display=inline&#x26;height=474&#x26;name=image.png&#x26;originHeight=948&#x26;originWidth=2238&#x26;size=175958&#x26;status=done&#x26;width=1119\" alt=\"image.png\"></p>\n<h2 id=\"result\">Result<a href=\"#result\" aria-hidden class=\"anchor\">#</a></h2>\n<p>If we are using eslint, these issues should be directly exposed. So began to conduct research and use. First try one in Pro. The effect is very good, you can see this <a href=\"https://github.com/ant-design/ant-design-pro/pull/4336\">PR</a>. I have joined this lint in <a href=\"https://github.com/ant-design/pro-blocks/pull/28\">pro-blocks</a>.</p>\n<p>We publish these rules as a package  🌟🌟<strong>umi-fabric</strong> 🌟🌟, This library provides some presets for eslint , stylelint and prettier , which is great for everyone. All open rules are meaningful for improving code quality.</p>\n<h2 id=\"use\">Use<a href=\"#use\" aria-hidden class=\"anchor\">#</a></h2>\n<p>The use of **umi-fabric ** is very simple.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> eslint @umijs/fabric -save-dev</code></pre></div>\n<p>And do the following configuration in the root directory <code>.eslintrc.js</code>.</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">const</span> fabric <span class=\"token operator\">=</span> <span class=\"token keyword\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'@umijs/fabric'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">module</span><span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> fabric<span class=\"token punctuation\">.</span>eslint<span class=\"token punctuation\">;</span></code></pre></div>\n<p>The eslint plugin in vscode does not default to the lint .ts file, we need to set it in <code>settings.json</code></p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\">  <span class=\"token string\">\"eslint.validate\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token string\">\"javascript\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"javascriptreact\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"typescript\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"typescriptreact\"</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></code></pre></div>\n<p>Then you can use it happily. Using <code>eslint fix</code> to get old ts code is amazing.</p>","tableOfContents":"<ul>\n<li><a href=\"/blog/use-eslint-typescript-cn/#%E8%B5%B7%E5%9B%A0\">起因</a></li>\n<li><a href=\"/blog/use-eslint-typescript-cn/#result\">Result</a></li>\n<li><a href=\"/blog/use-eslint-typescript-cn/#use\">Use</a></li>\n</ul>","frontmatter":{"title":{"zh_CN":"一起来用 eslint 吧","en_US":"一起来用 eslint 吧"},"order":1,"type":"Blog"},"fields":{"path":"/blog/use-eslint-typescript.zh-CN.md","slug":"/blog/use-eslint-typescript-cn","modifiedTime":1561099266699,"avatarList":[]}},"allMarkdownRemark":{"edges":[{"node":{"frontmatter":{"title":{"zh_CN":"一起来用 eslint 吧","en_US":"一起来用 eslint 吧"},"order":1,"type":"Blog"},"fields":{"slug":"/blog/use-eslint-typescript-cn","path":"/blog/use-eslint-typescript.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"一起来用 eslint 吧","en_US":"一起来用 eslint 吧"},"order":1,"type":"Blog"},"fields":{"slug":"/blog/use-eslint-typescript","path":"/blog/use-eslint-typescript.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"Pro 的 Layout 组件","en_US":"Pro 的 Layout 组件"},"order":1,"type":"Blog"},"fields":{"slug":"/blog/new-pro-use-cn","path":"/blog/new-pro-use.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"Layout component of Ant Design Pro","en_US":"Layout component of Ant Design Pro"},"order":1,"type":"Blog"},"fields":{"slug":"/blog/new-pro-use","path":"/blog/new-pro-use.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"在线更换主题","en_US":"在线更换主题"},"order":1,"type":"Blog"},"fields":{"slug":"/blog/change-theme-cn","path":"/blog/change-theme.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"Customize theme on runtime","en_US":"Customize theme on runtime"},"order":0,"type":"Blog"},"fields":{"slug":"/blog/change-theme","path":"/blog/change-theme.en-US.md"}}}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/blog/use-eslint-typescript-cn","type":"/blog/"}}