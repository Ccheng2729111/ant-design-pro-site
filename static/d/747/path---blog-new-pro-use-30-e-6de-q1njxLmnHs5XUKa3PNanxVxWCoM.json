{"data":{"markdownRemark":{"html":"<p>There has always been a problem in Pro. We handed the entire project to the user. Although the user's DIY ability has been improved, the user can modify any function and fully control the project. But it also allows users to understand a lot of details. And it is not possible to quickly upgrade the version.</p>\n<p>In particular, Pro's core Layout, as the most used piece of Pro, we have seen almost every version of the business support. 0.x, 1.x, 2.x, almost every version has users, but can not follow the official upgrade, only after the error has occurred, the official community to help.</p>\n<p>We offer a solution in V4. Make a Layout into a component that allows any scaffolding to use Layout's capabilities, as well as smooth upgrades to keep up with the community. The code repository is here <a href=\"https://github.com/ant-design/ant-design-pro-layout\">pro-layout</a>.</p>\n<p>Layout provides a rich api configuration that decouples umi's dependencies, allowing even fast access to older projects.</p>\n<h2 id=\"use\">Use<a href=\"#use\" aria-hidden class=\"anchor\">#</a></h2>\n<p>It is also very simple to use</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">npm</span> i @ant-design/pro-layout --save\n// or\n<span class=\"token function\">yarn</span> <span class=\"token function\">add</span> @ant-design/pro-layout</code></pre></div>\n<p>In jsx:</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> BasicLayout <span class=\"token keyword\">from</span> <span class=\"token string\">'@ant-design/pro-layout'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">BasicLayout</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">,</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Start the project and you can get</p>\n<p><img src=\"https://user-images.githubusercontent.com/8186664/55930941-276e6580-5c56-11e9-800d-bc284bda4daf.png\" alt=\"image\"></p>\n<h2 id=\"advanced-usage\">Advanced usage<a href=\"#advanced-usage\" aria-hidden class=\"anchor\">#</a></h2>\n<p>Layout has a lot of requirements that need to be customized, so we expose a series of methods and hope to find a balance between flexibility and simplicity. A series of Api Layouts have preset values and can run normally without special configuration.</p>\n<h3 id=\"custom-menu\">Custom Menu<a href=\"#custom-menu\" aria-hidden class=\"anchor\">#</a></h3>\n<p>Layout uses menu props to generate menus, if you are using umi in prop or with this parameter. You can use it like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Layout</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">props<span class=\"token punctuation\">:</span> BasicLayoutProps</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">BasicLayout</span></span> <span class=\"token attr-name\">title</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>Ant Design Pro<span class=\"token punctuation\">\"</span></span> <span class=\"token spread\"><span class=\"token punctuation\">{</span><span class=\"token punctuation\">...</span><span class=\"token attr-value\">props</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>If you use other scaffolding, you can manually pass the routing configuration, the data structure is as follows:</p>\n<div class=\"gatsby-highlight\" data-language=\"tsx\"><pre class=\"language-tsx\"><code class=\"language-tsx\"><span class=\"token comment\">// can be imported { RouterTypes } from '@ant-design/pro-layout/typings' to get this type</span>\nExport <span class=\"token keyword\">interface</span> <span class=\"token class-name\">Route</span> <span class=\"token punctuation\">{</span>\n   Path<span class=\"token operator\">?</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n   Routes<span class=\"token punctuation\">:</span> <span class=\"token builtin\">Array</span><span class=\"token operator\">&lt;</span><span class=\"token punctuation\">{</span>\n     Exact<span class=\"token operator\">?</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>\n     Icon<span class=\"token operator\">?</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n     Name<span class=\"token operator\">?</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n     Path<span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n     <span class=\"token comment\">//Optional secondary menu</span>\n     Children<span class=\"token operator\">?</span><span class=\"token punctuation\">:</span> Route<span class=\"token punctuation\">[</span><span class=\"token string\">'routes'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">}</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nConst route<span class=\"token punctuation\">:</span> Route <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n   Routes<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n     <span class=\"token punctuation\">{</span> path<span class=\"token punctuation\">:</span> <span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">:</span> <span class=\"token string\">'welcome'</span><span class=\"token punctuation\">,</span> icon<span class=\"token punctuation\">:</span> <span class=\"token string\">'smile'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n     <span class=\"token punctuation\">{</span> path<span class=\"token punctuation\">:</span> <span class=\"token string\">'/home'</span><span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">:</span> <span class=\"token string\">'home'</span><span class=\"token punctuation\">,</span> icon<span class=\"token punctuation\">:</span> <span class=\"token string\">'home'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n   <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\nConst <span class=\"token function-variable function\">Layout</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">props<span class=\"token punctuation\">:</span> BasicLayoutProps</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n   Return <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">BasicLayout</span></span> <span class=\"token attr-name\">title</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>Ant Design Pro<span class=\"token punctuation\">\"</span></span> <span class=\"token spread\"><span class=\"token punctuation\">{</span><span class=\"token punctuation\">...</span><span class=\"token attr-value\">props</span><span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">route</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>route<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>In addition, we also provide <code>menuDataRender</code> and <code>menuItemRender</code> props,</p>","tableOfContents":"<ul>\n<li><a href=\"/blog/new-pro-use/#use\">Use</a></li>\n<li>\n<p><a href=\"/blog/new-pro-use/#advanced-usage\">Advanced usage</a></p>\n<ul>\n<li><a href=\"/blog/new-pro-use/#custom-menu\">Custom Menu</a></li>\n</ul>\n</li>\n</ul>","frontmatter":{"title":{"zh_CN":"Layout component of Ant Design Pro","en_US":"Layout component of Ant Design Pro"},"order":1,"type":"Blog"},"fields":{"path":"/blog/new-pro-use.en-US.md","slug":"/blog/new-pro-use","modifiedTime":1561098654027,"avatarList":[{"href":"/chenshuai2144","text":"\n        chenshuai2144\n","src":"https://avatars1.githubusercontent.com/u/8186664?s=40&amp;v=4"},{"href":"/afc163","text":"\n        afc163\n","src":"https://avatars0.githubusercontent.com/u/507615?s=40&amp;v=4"}]}},"allMarkdownRemark":{"edges":[{"node":{"frontmatter":{"title":{"zh_CN":"一起来用 eslint 吧","en_US":"一起来用 eslint 吧"},"order":1,"type":"Blog"},"fields":null}},{"node":{"frontmatter":{"title":{"zh_CN":"一起来用 eslint 吧","en_US":"一起来用 eslint 吧"},"order":1,"type":"Blog"},"fields":{"slug":"/blog/use-eslint-typescript-cn","path":"/blog/use-eslint-typescript.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"Pro 的 Layout 组件","en_US":"Pro 的 Layout 组件"},"order":1,"type":"Blog"},"fields":{"slug":"/blog/new-pro-use-cn","path":"/blog/new-pro-use.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"Layout component of Ant Design Pro","en_US":"Layout component of Ant Design Pro"},"order":1,"type":"Blog"},"fields":{"slug":"/blog/new-pro-use","path":"/blog/new-pro-use.en-US.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"在线更换主题","en_US":"在线更换主题"},"order":1,"type":"Blog"},"fields":{"slug":"/blog/change-theme-cn","path":"/blog/change-theme.zh-CN.md"}}},{"node":{"frontmatter":{"title":{"zh_CN":"Customize theme on runtime","en_US":"Customize theme on runtime"},"order":0,"type":"Blog"},"fields":{"slug":"/blog/change-theme","path":"/blog/change-theme.en-US.md"}}}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/blog/new-pro-use","type":"/blog/"}}